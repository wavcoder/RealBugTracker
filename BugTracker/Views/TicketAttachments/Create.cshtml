﻿@model BugTracker.Models.TicketAttachments

@{
    ViewBag.Title = "Create";
}

<h2>Create An Attachment</h2>

@*@using (Html.BeginForm())*@
@using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <!-- Hidden Data-->
    @*@Html.HiddenFor(model => model.Id)*@
    @*@Html.HiddenFor(model => model.FilePath)*@
    @*@Html.HiddenFor(model => model.Description)*@
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.UserId)
    @Html.Hidden("TicketId",new { ViewBag.TicketId })
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TicketId, "TicketId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("TicketId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.Display("TicketTitle", null,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

 

        <div class="form-group">
            @Html.LabelFor(model => model.FileUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FileUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                <input name="attachment" type="file" class="form-control" id="fileUpload" />
                @Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<p>
    <button class="btn btn-default">
        @Html.ActionLink("Back to List", "Index", "Tickets")
    </button>
</p>